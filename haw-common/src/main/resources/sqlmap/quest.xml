<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="questMapper">
	<select id="questSelectAll">
	<![CDATA[
		SELECT A.quest_no
		     , E.nation_nm || ' > ' || D.city_nm || ' > ' || C.region_nm
		     , A.quest_seq
		     , B2.gubun_nm AS type
		     , B1.gubun_nm AS level
		     , (
		        SELECT string_agg(inA.tag_nm, ',') AS tag_nm
		          FROM haw.tag inA
		         WHERE inA.tag_no IN (SELECT CAST(UNNEST(string_to_array(SUBSTR(inB.tag_str, 2, LENGTH(inB.tag_str)-2), '|')) AS Integer)
		                                FROM haw.quest inB
		                               WHERE inB.quest_no = A.quest_no)     
		       ) AS tag_nm
			 , A.open_yn
		     , A.badge_cnt
		     , A.quest_clear
		     , A.quest_nm
		     , A.auth
		     , A.description
		     , A.point
		     , A.input_dt
		  FROM haw.quest A
		       LEFT OUTER JOIN haw.gubun B1 ON (A.level = CAST(B1.gubun_cd AS Integer) AND B1.column_nm = 'level')
		       LEFT OUTER JOIN haw.gubun B2 ON (a.type = B2.gubun_cd AND B2.column_nm = 'type')
		       LEFT OUTER JOIN haw.region C ON (A.region_no = C.region_no)
		       LEFT OUTER JOIN haw.city D ON (C.city_serial = D.city_serial)
		       LEFT OUTER JOIN haw.nation E ON (D.nation_serial = E.nation_serial)
		 WHERE A.region_no = 2
		 ORDER BY A.quest_seq ASC	
	]]>
	</select>
	<select id="questSelect">
	<![CDATA[
		SELECT A.quest_no
		     , E.nation_nm || ' > ' || D.city_nm || ' > ' || C.region_nm
		     , A.quest_seq
		     , B2.gubun_nm AS type
		     , B1.gubun_nm AS level
		     , (
		        SELECT string_agg(inA.tag_nm, ',') AS tag_nm
		          FROM haw.tag inA
		         WHERE inA.tag_no IN (SELECT CAST(UNNEST(string_to_array(SUBSTR(inB.tag_str, 2, LENGTH(inB.tag_str)-2), '|')) AS Integer)
		                                FROM haw.quest inB
		                               WHERE inB.quest_no = A.quest_no)     
		       ) AS tag_nm
			 , A.open_yn
		     , A.badge_cnt
		     , A.quest_clear
		     , A.quest_nm
		     , A.auth
		     , A.description
		     , A.point
		     , A.input_dt
		  FROM haw.quest A
		       LEFT OUTER JOIN haw.gubun B1 ON (A.level = CAST(B1.gubun_cd AS Integer) AND B1.column_nm = 'level')
		       LEFT OUTER JOIN haw.gubun B2 ON (a.type = B2.gubun_cd AND B2.column_nm = 'type')
		       LEFT OUTER JOIN haw.region C ON (A.region_no = C.region_no)
		       LEFT OUTER JOIN haw.city D ON (C.city_serial = D.city_serial)
		       LEFT OUTER JOIN haw.nation E ON (D.nation_serial = E.nation_serial)
		 WHERE A.quest_no = 1
		 ORDER BY A.quest_seq ASC	
	]]>
	</select>
	<insert id="questInsert">
	<![CDATA[
		INSERT INTO haw.quest (
		       region_no
		     , quest_seq
		     , type
		     , tag_str
		     , open_yn
		     , badge_cnt
		     , quest_clear
		     , quest_nm
		     , auth
		     , level
		     , description
		     , point
		) VALUES (
		       2
		     , (SELECT MAX(COALESCE(quest_seq, 0)) + 1 FROM haw.quest WHERE region_no = 2)
		     , 'B'
		     , '|2|'
		     , true
		     , 0
		     , 1
		     , 'QUEST3'
		     , 'HEP{123456}'
		     , 10
		     , 'Compute Science'
		     , 500
		)	
	]]>
	</insert>

	<select id="missionSelectAll">
	<![CDATA[
		SELECT A.mission_no
		     , A.mission_seq
		     , B1.gubun_nm AS type
		     , B2.gubun_nm AS level
			 , (SELECT string_agg(inA.tag_nm, ',') AS tag_nm
		          FROM haw.tag inA
		         WHERE inA.tag_no IN (SELECT CAST(UNNEST(string_to_array(SUBSTR(inB.tag_str, 2, LENGTH(inB.tag_str)-2), '|')) AS Integer)
		                                FROM haw.mission inB
		                               WHERE inB.mission_no = A.mission_no)     
		       ) AS tag_nm
		     , A.from
		     , A.mission
		     , A.answer
		     , A.attach
		     , A.attach_img
		     , A.url
		     , A.limit_time
		     , A.point
		     , A.input_dt
		  FROM haw.mission A
		       LEFT OUTER JOIN haw.gubun B1 ON (A.type = B1.gubun_cd AND B1.column_nm = 'type')
		       LEFT OUTER JOIN haw.gubun B2 ON (A.level = CAST(B2.gubun_cd AS Integer) AND B2.column_nm = 'level')
		 WHERE A.quest_no = 1
		 ORDER BY A.mission_seq ASC	
	]]>
	</select>
	<select id="missionSelect">
	<![CDATA[
		SELECT A.mission_no
		     , A.mission_seq
		     , B1.gubun_nm AS type
		     , B2.gubun_nm AS level
			 , (SELECT string_agg(inA.tag_nm, ',') AS tag_nm
		          FROM haw.tag inA
		         WHERE inA.tag_no IN (SELECT CAST(UNNEST(string_to_array(SUBSTR(inB.tag_str, 2, LENGTH(inB.tag_str)-2), '|')) AS Integer)
		                                FROM haw.mission inB
		                               WHERE inB.mission_no = A.mission_no)     
		       ) AS tag_nm
		     , A.from
		     , A.mission
		     , A.answer
		     , A.attach
		     , A.attach_img
		     , A.url
		     , A.limit_time
		     , A.point
		     , A.input_dt
		  FROM haw.mission A
		       LEFT OUTER JOIN haw.gubun B1 ON (A.type = B1.gubun_cd AND B1.column_nm = 'type')
		       LEFT OUTER JOIN haw.gubun B2 ON (A.level = CAST(B2.gubun_cd AS Integer) AND B2.column_nm = 'level')
		 WHERE A.mission_no = 1
		 ORDER BY A.mission_seq ASC	
	]]>
	</select>
	<!-- << 지역변경시에 번호 변경>>> -->
	<select id="questRegionSelect">
	<!-- 기존의 지역번호와 순서를 가져옴 -->
	<![CDATA[
		SELECT A.region_no
		     , A.quest_seq
		  FROM haw.quest A
		 WHERE A.quest_no = 2
	]]>
	</select>
	
	<update id="questSeqUpdateAll">
	<!-- 해당 퀘스트 밑의 순서의 해당하는 퀘스트의 순서번호를 변경함 -->
	<![CDATA[
		UPDATE TABLE haw.quest SET
		       quest_seq = quest_seq -1
		 WHERE region_no = 2
		   AND quest_seq < 2	
	]]>
	</update>
	<update id="questSeqUpdate">
	<!-- 해당 퀘스트의 순서번호를 새지역의 가장 나중으로 설정함 -->
	<![CDATA[
		UPDATE TABLE haw.quest SET
		       region_no = 3 -- 3번이라는 새로운 지역
		     , quest_seq = (SELECT COALESCE(MAX(quest_seq), 0) + 1 FROM haw.quest WHERE region_no = 3)
		 WHERE quest_no = 2		
	]]>
	</update>
	
	<insert id="tagInsert" useGeneratedKeys="true" keyColumn="tag_no" keyProperty="tag_no">
	<![CDATA[
		INSERT INTO haw.tag (tag_nm)
		VALUES ('도라에몽')
	]]>
	</insert>
	
	<select id="tagSelect">
	<![CDATA[
		SELECT A.tag_no
		  FROM haw.tag A
		 WHERE A.tag_nm = '피카츄'	
	]]>
	</select>

	<delete id="tagDelete">
	<![CDATA[
		DELETE FROM haw.tag
		 WHERE tag_no = 1
	]]>
	</delete>
	
	<select id="questDirectedExistsSelect">
	<![CDATA[
		SELECT COUNT(*)
		  FROM haw.quest_directed A
		 WHERE A.quest_no = 3
		   AND A.direct_no = 2
	]]>
	</select>
	
	<insert id="questDirectedInsert">
	<![CDATA[
		INSERT INTO haw.quest_directed (
		       quest_no
		     , direct_no
		     , required_yn
		) VALUES (
			   3
			 , 2
			 , false
		)
	]]>
	</insert>
	
	<delete id="questDirectedDelete">
	<![CDATA[
		DELETE FROM haw.quest_directed
		 WHERE quest_no = 3
		   AND direct_no = 2
	]]>
	</delete>
	
	<select id="questBadgeExistsSelect">
	<![CDATA[
		SELECT COUNT(*)
		  FROM haw.quest_badge A
		 WHERE A.quest_no = 3
		   AND A.badge_no = 2
	]]>
	</select>
	
	<insert id="questBadgeInsert">
	<![CDATA[
		INSERT INTO haw.quest_badge (s
		) VALUES (
		)
	]]>
	</insert>
</mapper>